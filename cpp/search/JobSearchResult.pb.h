// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JobSearchResult.proto

#ifndef PROTOBUF_JobSearchResult_2eproto__INCLUDED
#define PROTOBUF_JobSearchResult_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace job_search {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_JobSearchResult_2eproto();
void protobuf_AssignDesc_JobSearchResult_2eproto();
void protobuf_ShutdownFile_JobSearchResult_2eproto();

class JobSearchResult;
class JobSearchResult_ResultItem;
class JobSearchResult_StatsItem;

// ===================================================================

class JobSearchResult_ResultItem : public ::google::protobuf::Message {
 public:
  JobSearchResult_ResultItem();
  virtual ~JobSearchResult_ResultItem();
  
  JobSearchResult_ResultItem(const JobSearchResult_ResultItem& from);
  
  inline JobSearchResult_ResultItem& operator=(const JobSearchResult_ResultItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSearchResult_ResultItem& default_instance();
  
  void Swap(JobSearchResult_ResultItem* other);
  
  // implements Message ----------------------------------------------
  
  JobSearchResult_ResultItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSearchResult_ResultItem& from);
  void MergeFrom(const JobSearchResult_ResultItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 jid = 1;
  inline bool has_jid() const;
  inline void clear_jid();
  static const int kJidFieldNumber = 1;
  inline ::google::protobuf::int64 jid() const;
  inline void set_jid(::google::protobuf::int64 value);
  
  // optional double score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline double score() const;
  inline void set_score(double value);
  
  // optional bytes title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const void* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional bytes location = 4;
  inline bool has_location() const;
  inline void clear_location();
  static const int kLocationFieldNumber = 4;
  inline const ::std::string& location() const;
  inline void set_location(const ::std::string& value);
  inline void set_location(const char* value);
  inline void set_location(const void* value, size_t size);
  inline ::std::string* mutable_location();
  inline ::std::string* release_location();
  
  // optional int64 company_id = 5;
  inline bool has_company_id() const;
  inline void clear_company_id();
  static const int kCompanyIdFieldNumber = 5;
  inline ::google::protobuf::int64 company_id() const;
  inline void set_company_id(::google::protobuf::int64 value);
  
  // optional bytes company_name = 6;
  inline bool has_company_name() const;
  inline void clear_company_name();
  static const int kCompanyNameFieldNumber = 6;
  inline const ::std::string& company_name() const;
  inline void set_company_name(const ::std::string& value);
  inline void set_company_name(const char* value);
  inline void set_company_name(const void* value, size_t size);
  inline ::std::string* mutable_company_name();
  inline ::std::string* release_company_name();
  
  // optional bytes company_image = 7;
  inline bool has_company_image() const;
  inline void clear_company_image();
  static const int kCompanyImageFieldNumber = 7;
  inline const ::std::string& company_image() const;
  inline void set_company_image(const ::std::string& value);
  inline void set_company_image(const char* value);
  inline void set_company_image(const void* value, size_t size);
  inline ::std::string* mutable_company_image();
  inline ::std::string* release_company_image();
  
  // optional bytes department = 8;
  inline bool has_department() const;
  inline void clear_department();
  static const int kDepartmentFieldNumber = 8;
  inline const ::std::string& department() const;
  inline void set_department(const ::std::string& value);
  inline void set_department(const char* value);
  inline void set_department(const void* value, size_t size);
  inline ::std::string* mutable_department();
  inline ::std::string* release_department();
  
  // optional int64 post_date = 9;
  inline bool has_post_date() const;
  inline void clear_post_date();
  static const int kPostDateFieldNumber = 9;
  inline ::google::protobuf::int64 post_date() const;
  inline void set_post_date(::google::protobuf::int64 value);
  
  // optional bytes debug_data = 10;
  inline bool has_debug_data() const;
  inline void clear_debug_data();
  static const int kDebugDataFieldNumber = 10;
  inline const ::std::string& debug_data() const;
  inline void set_debug_data(const ::std::string& value);
  inline void set_debug_data(const char* value);
  inline void set_debug_data(const void* value, size_t size);
  inline ::std::string* mutable_debug_data();
  inline ::std::string* release_debug_data();
  
  // @@protoc_insertion_point(class_scope:job_search.JobSearchResult.ResultItem)
 private:
  inline void set_has_jid();
  inline void clear_has_jid();
  inline void set_has_score();
  inline void clear_has_score();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_location();
  inline void clear_has_location();
  inline void set_has_company_id();
  inline void clear_has_company_id();
  inline void set_has_company_name();
  inline void clear_has_company_name();
  inline void set_has_company_image();
  inline void clear_has_company_image();
  inline void set_has_department();
  inline void clear_has_department();
  inline void set_has_post_date();
  inline void clear_has_post_date();
  inline void set_has_debug_data();
  inline void clear_has_debug_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 jid_;
  double score_;
  ::std::string* title_;
  ::std::string* location_;
  ::google::protobuf::int64 company_id_;
  ::std::string* company_name_;
  ::std::string* company_image_;
  ::std::string* department_;
  ::google::protobuf::int64 post_date_;
  ::std::string* debug_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_JobSearchResult_2eproto();
  friend void protobuf_AssignDesc_JobSearchResult_2eproto();
  friend void protobuf_ShutdownFile_JobSearchResult_2eproto();
  
  void InitAsDefaultInstance();
  static JobSearchResult_ResultItem* default_instance_;
};
// -------------------------------------------------------------------

class JobSearchResult_StatsItem : public ::google::protobuf::Message {
 public:
  JobSearchResult_StatsItem();
  virtual ~JobSearchResult_StatsItem();
  
  JobSearchResult_StatsItem(const JobSearchResult_StatsItem& from);
  
  inline JobSearchResult_StatsItem& operator=(const JobSearchResult_StatsItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSearchResult_StatsItem& default_instance();
  
  void Swap(JobSearchResult_StatsItem* other);
  
  // implements Message ----------------------------------------------
  
  JobSearchResult_StatsItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSearchResult_StatsItem& from);
  void MergeFrom(const JobSearchResult_StatsItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bytes stats_type = 1;
  inline bool has_stats_type() const;
  inline void clear_stats_type();
  static const int kStatsTypeFieldNumber = 1;
  inline const ::std::string& stats_type() const;
  inline void set_stats_type(const ::std::string& value);
  inline void set_stats_type(const char* value);
  inline void set_stats_type(const void* value, size_t size);
  inline ::std::string* mutable_stats_type();
  inline ::std::string* release_stats_type();
  
  // optional uint64 stats_key = 2;
  inline bool has_stats_key() const;
  inline void clear_stats_key();
  static const int kStatsKeyFieldNumber = 2;
  inline ::google::protobuf::uint64 stats_key() const;
  inline void set_stats_key(::google::protobuf::uint64 value);
  
  // optional bytes stats_name = 4;
  inline bool has_stats_name() const;
  inline void clear_stats_name();
  static const int kStatsNameFieldNumber = 4;
  inline const ::std::string& stats_name() const;
  inline void set_stats_name(const ::std::string& value);
  inline void set_stats_name(const char* value);
  inline void set_stats_name(const void* value, size_t size);
  inline ::std::string* mutable_stats_name();
  inline ::std::string* release_stats_name();
  
  // optional uint64 stats_value = 3;
  inline bool has_stats_value() const;
  inline void clear_stats_value();
  static const int kStatsValueFieldNumber = 3;
  inline ::google::protobuf::uint64 stats_value() const;
  inline void set_stats_value(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:job_search.JobSearchResult.StatsItem)
 private:
  inline void set_has_stats_type();
  inline void clear_has_stats_type();
  inline void set_has_stats_key();
  inline void clear_has_stats_key();
  inline void set_has_stats_name();
  inline void clear_has_stats_name();
  inline void set_has_stats_value();
  inline void clear_has_stats_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stats_type_;
  ::google::protobuf::uint64 stats_key_;
  ::std::string* stats_name_;
  ::google::protobuf::uint64 stats_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_JobSearchResult_2eproto();
  friend void protobuf_AssignDesc_JobSearchResult_2eproto();
  friend void protobuf_ShutdownFile_JobSearchResult_2eproto();
  
  void InitAsDefaultInstance();
  static JobSearchResult_StatsItem* default_instance_;
};
// -------------------------------------------------------------------

class JobSearchResult : public ::google::protobuf::Message {
 public:
  JobSearchResult();
  virtual ~JobSearchResult();
  
  JobSearchResult(const JobSearchResult& from);
  
  inline JobSearchResult& operator=(const JobSearchResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSearchResult& default_instance();
  
  void Swap(JobSearchResult* other);
  
  // implements Message ----------------------------------------------
  
  JobSearchResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSearchResult& from);
  void MergeFrom(const JobSearchResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef JobSearchResult_ResultItem ResultItem;
  typedef JobSearchResult_StatsItem StatsItem;
  
  // accessors -------------------------------------------------------
  
  // optional int32 offset = 1;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 1;
  inline ::google::protobuf::int32 offset() const;
  inline void set_offset(::google::protobuf::int32 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 total_estimated = 3;
  inline bool has_total_estimated() const;
  inline void clear_total_estimated();
  static const int kTotalEstimatedFieldNumber = 3;
  inline ::google::protobuf::int32 total_estimated() const;
  inline void set_total_estimated(::google::protobuf::int32 value);
  
  // repeated .job_search.JobSearchResult.ResultItem result_item = 4;
  inline int result_item_size() const;
  inline void clear_result_item();
  static const int kResultItemFieldNumber = 4;
  inline const ::job_search::JobSearchResult_ResultItem& result_item(int index) const;
  inline ::job_search::JobSearchResult_ResultItem* mutable_result_item(int index);
  inline ::job_search::JobSearchResult_ResultItem* add_result_item();
  inline const ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_ResultItem >&
      result_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_ResultItem >*
      mutable_result_item();
  
  // repeated .job_search.JobSearchResult.StatsItem stats_item = 5;
  inline int stats_item_size() const;
  inline void clear_stats_item();
  static const int kStatsItemFieldNumber = 5;
  inline const ::job_search::JobSearchResult_StatsItem& stats_item(int index) const;
  inline ::job_search::JobSearchResult_StatsItem* mutable_stats_item(int index);
  inline ::job_search::JobSearchResult_StatsItem* add_stats_item();
  inline const ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_StatsItem >&
      stats_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_StatsItem >*
      mutable_stats_item();
  
  // @@protoc_insertion_point(class_scope:job_search.JobSearchResult)
 private:
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_total_estimated();
  inline void clear_has_total_estimated();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_ResultItem > result_item_;
  ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_StatsItem > stats_item_;
  ::google::protobuf::int32 total_estimated_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_JobSearchResult_2eproto();
  friend void protobuf_AssignDesc_JobSearchResult_2eproto();
  friend void protobuf_ShutdownFile_JobSearchResult_2eproto();
  
  void InitAsDefaultInstance();
  static JobSearchResult* default_instance_;
};
// ===================================================================


// ===================================================================

// JobSearchResult_ResultItem

// optional int64 jid = 1;
inline bool JobSearchResult_ResultItem::has_jid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_jid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobSearchResult_ResultItem::clear_has_jid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobSearchResult_ResultItem::clear_jid() {
  jid_ = GOOGLE_LONGLONG(0);
  clear_has_jid();
}
inline ::google::protobuf::int64 JobSearchResult_ResultItem::jid() const {
  return jid_;
}
inline void JobSearchResult_ResultItem::set_jid(::google::protobuf::int64 value) {
  set_has_jid();
  jid_ = value;
}

// optional double score = 2;
inline bool JobSearchResult_ResultItem::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobSearchResult_ResultItem::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobSearchResult_ResultItem::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline double JobSearchResult_ResultItem::score() const {
  return score_;
}
inline void JobSearchResult_ResultItem::set_score(double value) {
  set_has_score();
  score_ = value;
}

// optional bytes title = 3;
inline bool JobSearchResult_ResultItem::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobSearchResult_ResultItem::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobSearchResult_ResultItem::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& JobSearchResult_ResultItem::title() const {
  return *title_;
}
inline void JobSearchResult_ResultItem::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void JobSearchResult_ResultItem::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void JobSearchResult_ResultItem::set_title(const void* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* JobSearchResult_ResultItem::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes location = 4;
inline bool JobSearchResult_ResultItem::has_location() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_location() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobSearchResult_ResultItem::clear_has_location() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobSearchResult_ResultItem::clear_location() {
  if (location_ != &::google::protobuf::internal::kEmptyString) {
    location_->clear();
  }
  clear_has_location();
}
inline const ::std::string& JobSearchResult_ResultItem::location() const {
  return *location_;
}
inline void JobSearchResult_ResultItem::set_location(const ::std::string& value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void JobSearchResult_ResultItem::set_location(const char* value) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(value);
}
inline void JobSearchResult_ResultItem::set_location(const void* value, size_t size) {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  location_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_location() {
  set_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    location_ = new ::std::string;
  }
  return location_;
}
inline ::std::string* JobSearchResult_ResultItem::release_location() {
  clear_has_location();
  if (location_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = location_;
    location_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 company_id = 5;
inline bool JobSearchResult_ResultItem::has_company_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_company_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobSearchResult_ResultItem::clear_has_company_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobSearchResult_ResultItem::clear_company_id() {
  company_id_ = GOOGLE_LONGLONG(0);
  clear_has_company_id();
}
inline ::google::protobuf::int64 JobSearchResult_ResultItem::company_id() const {
  return company_id_;
}
inline void JobSearchResult_ResultItem::set_company_id(::google::protobuf::int64 value) {
  set_has_company_id();
  company_id_ = value;
}

// optional bytes company_name = 6;
inline bool JobSearchResult_ResultItem::has_company_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_company_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JobSearchResult_ResultItem::clear_has_company_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JobSearchResult_ResultItem::clear_company_name() {
  if (company_name_ != &::google::protobuf::internal::kEmptyString) {
    company_name_->clear();
  }
  clear_has_company_name();
}
inline const ::std::string& JobSearchResult_ResultItem::company_name() const {
  return *company_name_;
}
inline void JobSearchResult_ResultItem::set_company_name(const ::std::string& value) {
  set_has_company_name();
  if (company_name_ == &::google::protobuf::internal::kEmptyString) {
    company_name_ = new ::std::string;
  }
  company_name_->assign(value);
}
inline void JobSearchResult_ResultItem::set_company_name(const char* value) {
  set_has_company_name();
  if (company_name_ == &::google::protobuf::internal::kEmptyString) {
    company_name_ = new ::std::string;
  }
  company_name_->assign(value);
}
inline void JobSearchResult_ResultItem::set_company_name(const void* value, size_t size) {
  set_has_company_name();
  if (company_name_ == &::google::protobuf::internal::kEmptyString) {
    company_name_ = new ::std::string;
  }
  company_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_company_name() {
  set_has_company_name();
  if (company_name_ == &::google::protobuf::internal::kEmptyString) {
    company_name_ = new ::std::string;
  }
  return company_name_;
}
inline ::std::string* JobSearchResult_ResultItem::release_company_name() {
  clear_has_company_name();
  if (company_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = company_name_;
    company_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes company_image = 7;
inline bool JobSearchResult_ResultItem::has_company_image() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_company_image() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JobSearchResult_ResultItem::clear_has_company_image() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JobSearchResult_ResultItem::clear_company_image() {
  if (company_image_ != &::google::protobuf::internal::kEmptyString) {
    company_image_->clear();
  }
  clear_has_company_image();
}
inline const ::std::string& JobSearchResult_ResultItem::company_image() const {
  return *company_image_;
}
inline void JobSearchResult_ResultItem::set_company_image(const ::std::string& value) {
  set_has_company_image();
  if (company_image_ == &::google::protobuf::internal::kEmptyString) {
    company_image_ = new ::std::string;
  }
  company_image_->assign(value);
}
inline void JobSearchResult_ResultItem::set_company_image(const char* value) {
  set_has_company_image();
  if (company_image_ == &::google::protobuf::internal::kEmptyString) {
    company_image_ = new ::std::string;
  }
  company_image_->assign(value);
}
inline void JobSearchResult_ResultItem::set_company_image(const void* value, size_t size) {
  set_has_company_image();
  if (company_image_ == &::google::protobuf::internal::kEmptyString) {
    company_image_ = new ::std::string;
  }
  company_image_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_company_image() {
  set_has_company_image();
  if (company_image_ == &::google::protobuf::internal::kEmptyString) {
    company_image_ = new ::std::string;
  }
  return company_image_;
}
inline ::std::string* JobSearchResult_ResultItem::release_company_image() {
  clear_has_company_image();
  if (company_image_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = company_image_;
    company_image_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes department = 8;
inline bool JobSearchResult_ResultItem::has_department() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_department() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JobSearchResult_ResultItem::clear_has_department() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JobSearchResult_ResultItem::clear_department() {
  if (department_ != &::google::protobuf::internal::kEmptyString) {
    department_->clear();
  }
  clear_has_department();
}
inline const ::std::string& JobSearchResult_ResultItem::department() const {
  return *department_;
}
inline void JobSearchResult_ResultItem::set_department(const ::std::string& value) {
  set_has_department();
  if (department_ == &::google::protobuf::internal::kEmptyString) {
    department_ = new ::std::string;
  }
  department_->assign(value);
}
inline void JobSearchResult_ResultItem::set_department(const char* value) {
  set_has_department();
  if (department_ == &::google::protobuf::internal::kEmptyString) {
    department_ = new ::std::string;
  }
  department_->assign(value);
}
inline void JobSearchResult_ResultItem::set_department(const void* value, size_t size) {
  set_has_department();
  if (department_ == &::google::protobuf::internal::kEmptyString) {
    department_ = new ::std::string;
  }
  department_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_department() {
  set_has_department();
  if (department_ == &::google::protobuf::internal::kEmptyString) {
    department_ = new ::std::string;
  }
  return department_;
}
inline ::std::string* JobSearchResult_ResultItem::release_department() {
  clear_has_department();
  if (department_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = department_;
    department_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 post_date = 9;
inline bool JobSearchResult_ResultItem::has_post_date() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_post_date() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JobSearchResult_ResultItem::clear_has_post_date() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JobSearchResult_ResultItem::clear_post_date() {
  post_date_ = GOOGLE_LONGLONG(0);
  clear_has_post_date();
}
inline ::google::protobuf::int64 JobSearchResult_ResultItem::post_date() const {
  return post_date_;
}
inline void JobSearchResult_ResultItem::set_post_date(::google::protobuf::int64 value) {
  set_has_post_date();
  post_date_ = value;
}

// optional bytes debug_data = 10;
inline bool JobSearchResult_ResultItem::has_debug_data() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JobSearchResult_ResultItem::set_has_debug_data() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JobSearchResult_ResultItem::clear_has_debug_data() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JobSearchResult_ResultItem::clear_debug_data() {
  if (debug_data_ != &::google::protobuf::internal::kEmptyString) {
    debug_data_->clear();
  }
  clear_has_debug_data();
}
inline const ::std::string& JobSearchResult_ResultItem::debug_data() const {
  return *debug_data_;
}
inline void JobSearchResult_ResultItem::set_debug_data(const ::std::string& value) {
  set_has_debug_data();
  if (debug_data_ == &::google::protobuf::internal::kEmptyString) {
    debug_data_ = new ::std::string;
  }
  debug_data_->assign(value);
}
inline void JobSearchResult_ResultItem::set_debug_data(const char* value) {
  set_has_debug_data();
  if (debug_data_ == &::google::protobuf::internal::kEmptyString) {
    debug_data_ = new ::std::string;
  }
  debug_data_->assign(value);
}
inline void JobSearchResult_ResultItem::set_debug_data(const void* value, size_t size) {
  set_has_debug_data();
  if (debug_data_ == &::google::protobuf::internal::kEmptyString) {
    debug_data_ = new ::std::string;
  }
  debug_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_ResultItem::mutable_debug_data() {
  set_has_debug_data();
  if (debug_data_ == &::google::protobuf::internal::kEmptyString) {
    debug_data_ = new ::std::string;
  }
  return debug_data_;
}
inline ::std::string* JobSearchResult_ResultItem::release_debug_data() {
  clear_has_debug_data();
  if (debug_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = debug_data_;
    debug_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// JobSearchResult_StatsItem

// optional bytes stats_type = 1;
inline bool JobSearchResult_StatsItem::has_stats_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSearchResult_StatsItem::set_has_stats_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobSearchResult_StatsItem::clear_has_stats_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobSearchResult_StatsItem::clear_stats_type() {
  if (stats_type_ != &::google::protobuf::internal::kEmptyString) {
    stats_type_->clear();
  }
  clear_has_stats_type();
}
inline const ::std::string& JobSearchResult_StatsItem::stats_type() const {
  return *stats_type_;
}
inline void JobSearchResult_StatsItem::set_stats_type(const ::std::string& value) {
  set_has_stats_type();
  if (stats_type_ == &::google::protobuf::internal::kEmptyString) {
    stats_type_ = new ::std::string;
  }
  stats_type_->assign(value);
}
inline void JobSearchResult_StatsItem::set_stats_type(const char* value) {
  set_has_stats_type();
  if (stats_type_ == &::google::protobuf::internal::kEmptyString) {
    stats_type_ = new ::std::string;
  }
  stats_type_->assign(value);
}
inline void JobSearchResult_StatsItem::set_stats_type(const void* value, size_t size) {
  set_has_stats_type();
  if (stats_type_ == &::google::protobuf::internal::kEmptyString) {
    stats_type_ = new ::std::string;
  }
  stats_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_StatsItem::mutable_stats_type() {
  set_has_stats_type();
  if (stats_type_ == &::google::protobuf::internal::kEmptyString) {
    stats_type_ = new ::std::string;
  }
  return stats_type_;
}
inline ::std::string* JobSearchResult_StatsItem::release_stats_type() {
  clear_has_stats_type();
  if (stats_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stats_type_;
    stats_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 stats_key = 2;
inline bool JobSearchResult_StatsItem::has_stats_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSearchResult_StatsItem::set_has_stats_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobSearchResult_StatsItem::clear_has_stats_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobSearchResult_StatsItem::clear_stats_key() {
  stats_key_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_key();
}
inline ::google::protobuf::uint64 JobSearchResult_StatsItem::stats_key() const {
  return stats_key_;
}
inline void JobSearchResult_StatsItem::set_stats_key(::google::protobuf::uint64 value) {
  set_has_stats_key();
  stats_key_ = value;
}

// optional bytes stats_name = 4;
inline bool JobSearchResult_StatsItem::has_stats_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSearchResult_StatsItem::set_has_stats_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobSearchResult_StatsItem::clear_has_stats_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobSearchResult_StatsItem::clear_stats_name() {
  if (stats_name_ != &::google::protobuf::internal::kEmptyString) {
    stats_name_->clear();
  }
  clear_has_stats_name();
}
inline const ::std::string& JobSearchResult_StatsItem::stats_name() const {
  return *stats_name_;
}
inline void JobSearchResult_StatsItem::set_stats_name(const ::std::string& value) {
  set_has_stats_name();
  if (stats_name_ == &::google::protobuf::internal::kEmptyString) {
    stats_name_ = new ::std::string;
  }
  stats_name_->assign(value);
}
inline void JobSearchResult_StatsItem::set_stats_name(const char* value) {
  set_has_stats_name();
  if (stats_name_ == &::google::protobuf::internal::kEmptyString) {
    stats_name_ = new ::std::string;
  }
  stats_name_->assign(value);
}
inline void JobSearchResult_StatsItem::set_stats_name(const void* value, size_t size) {
  set_has_stats_name();
  if (stats_name_ == &::google::protobuf::internal::kEmptyString) {
    stats_name_ = new ::std::string;
  }
  stats_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* JobSearchResult_StatsItem::mutable_stats_name() {
  set_has_stats_name();
  if (stats_name_ == &::google::protobuf::internal::kEmptyString) {
    stats_name_ = new ::std::string;
  }
  return stats_name_;
}
inline ::std::string* JobSearchResult_StatsItem::release_stats_name() {
  clear_has_stats_name();
  if (stats_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stats_name_;
    stats_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint64 stats_value = 3;
inline bool JobSearchResult_StatsItem::has_stats_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobSearchResult_StatsItem::set_has_stats_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobSearchResult_StatsItem::clear_has_stats_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobSearchResult_StatsItem::clear_stats_value() {
  stats_value_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_value();
}
inline ::google::protobuf::uint64 JobSearchResult_StatsItem::stats_value() const {
  return stats_value_;
}
inline void JobSearchResult_StatsItem::set_stats_value(::google::protobuf::uint64 value) {
  set_has_stats_value();
  stats_value_ = value;
}

// -------------------------------------------------------------------

// JobSearchResult

// optional int32 offset = 1;
inline bool JobSearchResult::has_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobSearchResult::set_has_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobSearchResult::clear_has_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobSearchResult::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline ::google::protobuf::int32 JobSearchResult::offset() const {
  return offset_;
}
inline void JobSearchResult::set_offset(::google::protobuf::int32 value) {
  set_has_offset();
  offset_ = value;
}

// optional int32 count = 2;
inline bool JobSearchResult::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobSearchResult::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobSearchResult::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobSearchResult::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 JobSearchResult::count() const {
  return count_;
}
inline void JobSearchResult::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 total_estimated = 3;
inline bool JobSearchResult::has_total_estimated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobSearchResult::set_has_total_estimated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobSearchResult::clear_has_total_estimated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobSearchResult::clear_total_estimated() {
  total_estimated_ = 0;
  clear_has_total_estimated();
}
inline ::google::protobuf::int32 JobSearchResult::total_estimated() const {
  return total_estimated_;
}
inline void JobSearchResult::set_total_estimated(::google::protobuf::int32 value) {
  set_has_total_estimated();
  total_estimated_ = value;
}

// repeated .job_search.JobSearchResult.ResultItem result_item = 4;
inline int JobSearchResult::result_item_size() const {
  return result_item_.size();
}
inline void JobSearchResult::clear_result_item() {
  result_item_.Clear();
}
inline const ::job_search::JobSearchResult_ResultItem& JobSearchResult::result_item(int index) const {
  return result_item_.Get(index);
}
inline ::job_search::JobSearchResult_ResultItem* JobSearchResult::mutable_result_item(int index) {
  return result_item_.Mutable(index);
}
inline ::job_search::JobSearchResult_ResultItem* JobSearchResult::add_result_item() {
  return result_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_ResultItem >&
JobSearchResult::result_item() const {
  return result_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_ResultItem >*
JobSearchResult::mutable_result_item() {
  return &result_item_;
}

// repeated .job_search.JobSearchResult.StatsItem stats_item = 5;
inline int JobSearchResult::stats_item_size() const {
  return stats_item_.size();
}
inline void JobSearchResult::clear_stats_item() {
  stats_item_.Clear();
}
inline const ::job_search::JobSearchResult_StatsItem& JobSearchResult::stats_item(int index) const {
  return stats_item_.Get(index);
}
inline ::job_search::JobSearchResult_StatsItem* JobSearchResult::mutable_stats_item(int index) {
  return stats_item_.Mutable(index);
}
inline ::job_search::JobSearchResult_StatsItem* JobSearchResult::add_stats_item() {
  return stats_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_StatsItem >&
JobSearchResult::stats_item() const {
  return stats_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::job_search::JobSearchResult_StatsItem >*
JobSearchResult::mutable_stats_item() {
  return &stats_item_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace job_search

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JobSearchResult_2eproto__INCLUDED
